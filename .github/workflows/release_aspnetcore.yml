name: Build and Upload Portable App Release

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  release_cli:
    strategy:
      matrix:
        # rid: [linux-arm64, linux-musl-arm64, linux-x64, linux-musl-x64, osx-x64, osx-arm64, win-x64, win-x86, win-arm64]
        rid: [linux-x64,win-x64]
        build_configuration: [Release]
        deploy_mode: [with-runtime]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0

      - name: Build ASP.NET Core App
        run: |
          if [ "${{ matrix.deploy_mode }}" == "with-runtime" ]; then
            dotnet publish -c ${{ matrix.build_configuration }} -r ${{ matrix.rid }} TboxWebdav.Server.AspNetCore/TboxWebdav.Server.AspNetCore.csproj --self-contained
          else
            dotnet publish -c ${{ matrix.build_configuration }} -r ${{ matrix.rid }} TboxWebdav.Server.AspNetCore/TboxWebdav.Server.AspNetCore.csproj
          fi

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: TboxWebdav.Server.AspNetCore-${{ matrix.rid }}-${{ matrix.build_configuration }}-${{ matrix.deploy_mode }}
          path: TboxWebdav.Server.AspNetCore/bin/${{ matrix.build_configuration }}/net8.0/${{ matrix.rid }}/publish/

      - name: Pack Release Asset
        run: |
          cd TboxWebdav.Server.AspNetCore/bin/${{ matrix.build_configuration }}/net8.0/${{ matrix.rid }}/publish/
          zip -r /tmp/app-${{ matrix.rid }}-${{ matrix.build_configuration }}.zip .

      - name: Get the Latest Release Info
        id: latest_release_info
        uses: gregziegan/fetch-latest-release@v2.0.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Asset
        uses: shogo82148/actions-upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.latest_release_info.outputs.upload_url }}
          asset_path: /tmp/app-${{ matrix.rid }}-${{ matrix.build_configuration }}.zip
          asset_name: TboxWebdav.Server.AspNetCore-${{ matrix.rid }}-${{ matrix.deploy_mode }}.zip
          asset_content_type: application/zip
